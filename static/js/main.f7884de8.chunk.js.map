{"version":3,"sources":["components/InputForm/ContactList/ContactList.js","components/InputForm/FilterContacts/FilterContacts.js","components/InputForm/InputForm.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["ContactList","filteredContacts","deleteContact","map","e","name","number","onClick","id","FilterContacts","filtered","type","placeholder","onChange","InputForm","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","filter","loading","handleChange","target","value","createContact","singleContact","generate","onSubmit","preventDefault","newName","includes","alert","pattern","title","required","console","log","toLowerCase","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAEaA,EAAc,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,iBAAkBC,EAAoB,EAApBA,cAG3C,OAEY,mCACED,GACD,qCACD,0CACA,6BAAKA,EAAiBE,KAAI,SAAAC,GAAC,OAC3B,+BAAgBA,EAAEC,KAAlB,MAA2BD,EAAEE,OAC7B,wBAAQC,QAAS,kBAAIL,EAAcE,EAAEI,KAArC,sBADSJ,EAAEI,eCTdC,EAAiB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC7B,OAEI,qCACG,uDACE,uBACAC,KAAK,OACLN,KAAK,SACLO,YAAY,eACZC,SAAUH,QCNtB,IAiFeI,EAjFE,WAGhB,MCPc,SAAyBC,EAAKC,GAC3C,MAA0BC,oBAAS,WAAO,IAAD,EACvC,iBAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQP,WAA9C,QAAuDC,KADzD,mBAAOO,EAAP,KAAcC,EAAd,KAQA,OAJAC,qBAAU,WACRL,OAAOC,aAAaK,QAAQX,EAAKG,KAAKS,UAAUJ,MAC/C,CAACR,EAAKQ,IAEF,CAACA,EAAOC,GDFgBI,CAAgB,WAAY,IAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAyBb,mBAAS,CAC/BZ,KAAM,GACN0B,OAAQ,GACRzB,OAAQ,GACR0B,SAAS,IAJZ,mBAAOT,EAAP,KAAaC,EAAb,KAOOS,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBV,EAAS,2BAAID,GAAL,kBACLW,EAAO7B,KAAO6B,EAAOC,UAWpBC,EAAgB,WACpB,IAAO/B,EAAgBkB,EAAhBlB,KAAMC,EAAUiB,EAAVjB,OACP+B,EAAgB,CACpB7B,GAAI8B,cACJjC,OACAC,UAEFwB,EAAY,GAAD,mBAAKD,GAAL,CAAeQ,MAgB1B,OAAQ,qCACJ,uBAAME,SA/BS,SAACnC,GACpBA,EAAEoC,iBACF,IAAMC,EAAUZ,EAAS1B,KAAI,SAAAC,GAAC,OAAGA,EAAEC,QACnC,GAAIoC,EAAQC,SAAStC,EAAE8B,OAAO7B,KAAK8B,OAAQ,OAAOQ,MAAM,GAAD,OAAIvC,EAAE8B,OAAO7B,KAAK8B,MAAlB,0BACvDC,KA2BI,UACE,2CACA,sCACA,uBACEzB,KAAK,OACLN,KAAK,OACLuC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRjC,SAAUoB,IAEZ,wCACD,uBACGtB,KAAK,MACLN,KAAK,SACLuC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRjC,SAAUoB,IAEZ,wBAAQtB,KAAK,SAAb,4BAGA,cAAC,EAAD,CAAgBD,SAhCH,SAAC,GAAc,IAAbwB,EAAY,EAAZA,OAErBV,EAAS,2BAAID,GAAL,IAAYQ,OAAOG,EAAOC,YAiC5B,cAAC,EAAD,CAAalC,kBAvCnB8C,QAAQC,IAAInB,EAASE,QAAO,SAAC3B,GAAD,OAAOA,EAAEC,KAAK4C,cAAcP,SAASnB,EAAMQ,YAChEF,EAASE,QAAO,SAAC3B,GAAD,OAAOA,EAAEC,KAAK4C,cAAcP,SAASnB,EAAMQ,YAsCX7B,cA/BnC,SAACM,GACtBsB,EAAYD,EAASE,QAAO,SAAA3B,GAAC,OAAEA,EAAEI,KAAMA,aE3C3B0C,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f7884de8.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"\n\nexport const ContactList = ({filteredContacts, deleteContact }) => {\n    // console.log(filteredContacts)\n   \n    return ( \n           \n                <> \n                 {filteredContacts && \n                 <> \n                <h3>Contacts</h3>\n                <ul>{filteredContacts.map(e => \n                <li key={e.id}>{e.name} : {e.number} \n                <button onClick={()=>deleteContact(e.id)}>Delete</button></li>)    \n                }</ul>\n                 </>}\n            </>\n            \n    )\n}\n\nContactList.propTypes={\n    filteredContacts:PropTypes.arrayOf(Object).isRequired,\n    deleteContact:PropTypes.func.isRequired,\n  }","import React from 'react'\nimport PropTypes from \"prop-types\"\n\nexport const FilterContacts = ({filtered}) => {\n   return(\n      \n       <>\n          <h2>Find contacts by name</h2>\n            <input\n            type=\"text\"\n            name=\"filter\"\n            placeholder=\"start typing\"\n            onChange={filtered}\n            />\n            </>)\n}\n\nFilterContacts.propTypes={\n   filtered:PropTypes.func.isRequired\n}","import { useState, useEffect } from 'react';\nimport { v4 as generate } from 'uuid';\nimport { ContactList } from './ContactList/ContactList';\nimport { FilterContacts } from './FilterContacts/FilterContacts';\nimport useLocalStorage from '../../hooks/useLocalStorage'\n\nconst InputForm =() => {\n\n\n const [contacts, setContacts] = useLocalStorage('contacts', '');\n const [state,setState] = useState({\n    name: '',\n    filter: '',\n    number: '',\n    loading: true,\n    \n  })\n  const handleChange = ({ target }) => {\n    setState({...state,\n      [target.name]: target.value,\n    });\n   \n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newName = contacts.map(e=> e.name)\n    if (newName.includes(e.target.name.value)){return alert(`${e.target.name.value} says hello from chat`)}\n    createContact();\n    // localStorage.setItem('ContactList', JSON.stringify(state.contacts));\n  }\n  const createContact = () => {\n    const {name, number} = state\n    const singleContact = {\n      id: generate(),\n      name,\n      number,\n    }\n    setContacts([...contacts, singleContact])\n    \n  }\n  const filterContacts = (e) => {\n    console.log(contacts.filter((e) => e.name.toLowerCase().includes(state.filter)))\n    return contacts.filter((e) => e.name.toLowerCase().includes(state.filter))\n  }\n\n  const changiFilter = ({target}) => {\n  \n    setState({...state, filter:target.value})\n  }\n  const deleteContact = (id) => {\n   setContacts(contacts.filter(e=>e.id !==id))\n  }\n\n    return (<>\n        <form onSubmit={handleSubmit}>\n          <h1>Phonebook</h1>\n          <h2>Name</h2>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange}\n          />\n          <h2>Number</h2>\n         <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChange}\n          />\n          <button type=\"submit\">Add contact</button>\n          </form>\n          \n          <FilterContacts filtered={changiFilter} />\n          \n          \n          <ContactList filteredContacts={filterContacts()} deleteContact={deleteContact}/>\n        </>\n\n    )\n  \n}\n\nexport default InputForm","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n\n","import React from \"react\";\nimport InputForm from \"./components/InputForm/InputForm\";\n\nfunction App() {\n  return <InputForm />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}